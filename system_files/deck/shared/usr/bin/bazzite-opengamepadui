#!/usr/bin/bash

# OpenGamepadUI launcher for Bazzite
# Provides similar functionality to bazzite-steam but for OpenGamepadUI

IMAGE_INFO="/usr/share/ublue-os/image-info.json"
IMAGE_NAME=$(jq -r '."image-name"' < $IMAGE_INFO)

OPENGAMEPADUI_OPTIONS=""

if [[ $IMAGE_NAME =~ "deck" || $IMAGE_NAME =~ "ally" ]]; then
  # HHD Support for controller handling
  if ! /usr/libexec/hwsupport/valve-hardware; then
      export SDL_GAMECONTROLLERCONFIG="060000000d0f00009601000000000000,Steam Controller (HHD),a:b0,b:b1,x:b2,y:b3,back:b6,guide:b8,start:b7,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,paddle1:b13,paddle2:b12,paddle3:b15,paddle4:b14,misc2:b11,misc3:b16,misc4:b17,crc:ea35,"
  fi
fi

# GPU handling for multi-GPU systems
switcheroo_state="$(switcherooctl list)"
if [[ $(echo "${switcheroo_state}" | grep -o 'Device:' | wc -l) -gt 1 ]]; then
  # OpenGamepadUI doesn't need the same compositor workarounds as Steam
  # but we may need to handle GPU selection in the future
  :
fi
unset -v switcheroo_state

if [[ "$XDG_SESSION_TYPE" == "wayland" ]]; then
  # Wayland-specific setup for OpenGamepadUI
  # May need extest for input handling like Steam
  if command -v /usr/lib/extest/libextest.so >/dev/null 2>&1; then
    env LD_PRELOAD=/usr/lib/extest/libextest.so /usr/bin/opengamepadui "$OPENGAMEPADUI_OPTIONS" "$@"
  else
    /usr/bin/opengamepadui "$OPENGAMEPADUI_OPTIONS" "$@"
  fi
else
  /usr/bin/opengamepadui "$OPENGAMEPADUI_OPTIONS" "$@"
fi
